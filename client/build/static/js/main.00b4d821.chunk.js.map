{"version":3,"sources":["infrastructure/utils/PrivateRoute.tsx","application/api/agent.ts","application/store/store.ts","features/auth/LoginForm.tsx","infrastructure/utils/chakraTheme.ts","application/layout/Spinner.tsx","features/nav/Navbar.tsx","features/home/Search.tsx","features/book/BookItem.tsx","application/layout/LoaderInline.tsx","features/book/BookPage.tsx","features/home/HomePage.tsx","features/auth/BorrowedBooks.tsx","features/auth/SignUpForm.tsx","features/home/Footer.tsx","application/layout/NotFound.tsx","application/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["observer","Component","component","rest","token","localStorage","getItem","render","props","to","axios","defaults","baseURL","process","interceptors","request","use","config","console","log","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","window","removeItem","history","push","info","method","data","errors","hasOwnProperty","responseBody","requests","url","get","then","body","post","put","AuthRequest","values","BookRequest","title","params","bookId","configure","enforceActions","AppStore","makeAutoObservable","this","reaction","setItem","user","observable","computed","action","a","runInAction","appLoaded","loadApp","loadingBooks","bookData","books","loadingBook","book","isBorrowed","borrowedBooks","find","x","loadingBookAction","bookBeingBorrowed","_id","copies","success","bookBeingReturned","filter","storeContext","createContext","validationSchema","yup","shape","email","required","password","loginUser","useContext","className","mb","bg","initialValues","onSubmit","catch","setSubmitting","handleSubmit","handleChange","handleBlur","isSubmitting","isValid","dirty","touched","mt","isInvalid","id","value","name","onBlur","onChange","type","disabled","isLoading","style","color","fontSize","chakraTheme","fonts","styles","global","Loader","maxW","thickness","speed","emptyColor","size","logout","useMediaQuery","isMobile","height","spacing","activeClassName","isLazy","as","Box","src","avatar","alt","borderRadius","boxSize","ChevronDown","zIndex","minWidth","onClick","Search","useQueryParam","StringParam","setTitle","direction","alignItems","maxWidth","placeholder","iterator","Array","Math","floor","rating","setBook","colorScheme","images","map","index","Star","fontWeight","author","Check","NotAllowed","pages","genre","description","publishedDate","LoaderInline","pt","bookPane","useParams","location","useLocation","pathname","startsWith","getBookById","borrowBook","returnBook","useEffect","p","pb","Copy","length","href","productLink","target","rel","getAllBooks","templateColumns","xl","lg","sm","getBorrowedBooks","width","signUp","Footer","centerContent","Date","getFullYear","NotFound","h","theme","extendTheme","withRouter","getCurrentUser","position","exact","path","LoginForm","HomePage","BookPage","BorrowedBooks","SignUpForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","ReactRouterRoute","Route","document","getElementById"],"mappings":"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","file":"static/js/main.00b4d821.chunk.js","sourcesContent":["import React, {useContext} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Redirect, Route, RouteProps, RouteComponentProps} from \"react-router-dom\";\nimport storeContext from \"../../application/store/store\";\n\ninterface IProps extends RouteProps{\n  component: React.ComponentType<RouteComponentProps<any>>;\n}\n\nconst PrivateRoute: React.FC<IProps> = ({component:  Component, ...rest}) => {\n  const token = localStorage.getItem(\"token\");\n  return (\n    <Route {...rest} render={(props) => token ? <Component {...props} /> : <Redirect to='/login' />} />\n  )\n}\n\nexport default observer(PrivateRoute);\n\n\n","import axios, {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport Cookies from \"js-cookie\";\nimport {IAuthFormValues, IUser} from \"../../infrastructure/models/auth\";\nimport {toast} from \"react-toastify\";\nimport {history} from \"../../index\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n// set the token on every request\naxios.interceptors.request.use((config: AxiosRequestConfig) => {\n  const token =  localStorage.getItem(\"token\");\n  console.log(token);\n  if(token){\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error))\n\n//response interceptors for error handling\naxios.interceptors.response.use(undefined, (error) => {\n  //checks for network error by checking the message and if there is no response object\n  if (error.message === 'Network Error' && !error.response) {\n    toast.error('Network Error - Check your connection');\n  }\n  if(error.response.status === 401){\n    window.localStorage.removeItem(\"token\");\n    history.push(\"/\");\n    toast.info(\"Authentication error! please log in again\");\n  }\n  //redirect to notfound page for bad guids\n  if (error.response.status === 404) {\n    history.push('/notfound');\n  }\n  //redirect to notfound page for invalid id guid\n  if (\n    error.response.status === 400 &&\n    error.response.config.method == 'get' &&\n    error.response.data.errors.hasOwnProperty('id')\n  ) {\n    history.push('/notfound');\n  }\n  //send a toast notification if any response is a 500 status code\n  if (error.response.status === 500) {\n    toast.error('Server error - Try reloading the page');\n  }\n  throw error.response;\n});\n\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\nconst requests = {\n  get: (url: string, config?: AxiosRequestConfig) => axios.get(url, config).then(responseBody),\n  post: (url: string, body?: any, config?: AxiosRequestConfig) => axios.post(url, body, config).then(responseBody),\n  put: (url: string, body?: any, config?: AxiosRequestConfig) => axios.put(url, body, config).then(responseBody)\n}\n\nexport const AuthRequest = {\n  signUp: (values: IAuthFormValues)  => requests.post(`/signup`, values),\n  login: (values: IAuthFormValues)  => requests.post(`/login`, values),\n  logout: (): Promise<Record<string, unknown>> => requests.post(`/logout`),\n  getCurrentUser: () => requests.get(`/user`),\n  getBorrowedBooks: () => requests.get(`/users/books`)\n}\n\nexport const BookRequest = {\n  getAllBooks: (title: string) => requests.get(`/books`, {\n    params:{title}\n  }),\n  getBookById: (bookId: string) => requests.get(`/books/${bookId}`),\n  borrowBook: (bookId: string) => requests.put(`/books/borrow/${bookId}`),\n  returnBook: (bookId: string) => requests.put(`/books/return/${bookId}`)\n}\n","import {runInAction, action, observable, makeAutoObservable, configure, computed, reaction} from \"mobx\";\nimport {IAuthFormValues, IUser} from \"../../infrastructure/models/auth\";\nimport {AuthRequest, BookRequest} from \"../api/agent\";\nimport {createContext} from \"react\";\nimport {IBook} from \"../../infrastructure/models/book\";\nimport {history} from \"../../index\";\nimport {toast} from \"react-toastify\";\n\n// Ensure mobx always runs in action\nconfigure({enforceActions: \"always\"});\n\nclass AppStore{\n  constructor() {\n    makeAutoObservable(this);\n    reaction(() => this.token, (token) => {\n      if(token){\n        // set the token value in local storage as soon as the token changes\n        localStorage.setItem(\"token\", token);\n      } else {\n        localStorage.removeItem(\"token\");\n      }\n    })\n  }\n\n  @observable user : IUser | null = null;\n  @observable token: string | null = localStorage.getItem(\"token\");\n  @observable appLoaded = false;\n  @observable books: IBook[] | null = null;\n  @observable loadingBooks = false;\n  @observable book: IBook | null = null;\n  @observable loadingBook = false;\n  @observable loadingBookAction = false;\n  @observable borrowedBooks : IBook[] | null = null;\n\n  // check if a user is logged in\n  @computed get isLoggedIn(){\n    return this.user !== null;\n  }\n\n  // login a user\n  @action loginUser = async (values: IAuthFormValues) => {\n    try{\n      const user = await AuthRequest.login(values);\n      runInAction(() => {\n        this.user = user.data;\n        localStorage.setItem(\"token\", user.token);\n        this.appLoaded = true;\n      })\n    }catch (error){\n      toast.error(\"Invalid credentials\");\n      throw error;\n    }\n  }\n\n  // signup\n  @action signUp = async (values: IAuthFormValues) => {\n    try{\n      const user = await AuthRequest.signUp(values);\n      runInAction(() => {\n        this.appLoaded = true;\n      })\n    }catch (error){\n      toast.error(\"Invalid credentials\");\n      throw error;\n    }\n  }\n\n  // load the app\n  @action loadApp = () => {\n    this.appLoaded = true;\n  }\n\n  // get the currently logged in user\n  @action getCurrentUser = async () => {\n    try{\n      const user = await AuthRequest.getCurrentUser();\n      runInAction(() => {\n        this.user = user.data;\n        this.loadApp();\n      })\n    }catch (error) {\n      toast.error(\"Error occured fetching profile\");\n     throw error;\n    }\n  }\n\n  // get all books in library\n  @action getAllBooks = async (title: string) => {\n    this.loadingBooks = true;\n    try{\n      const bookData = await BookRequest.getAllBooks(title);\n      runInAction(() => {\n        this.books = bookData.data;\n        this.loadingBooks = false;\n      })\n    }catch (e) {\n      runInAction(() => this.loadingBooks = false);\n      toast.error(\"Error occurred fetching books\");\n     throw e;\n    }\n  }\n\n  // get a book by id\n  @action getBookById = async (bookId: string) => {\n    this.loadingBook = true;\n    try{\n      const bookData = await BookRequest.getBookById(bookId);\n      runInAction(() => {\n        this.book = bookData.data;\n        this.book!.isBorrowed = this.user!.borrowedBooks.find(x => x === bookId) !== undefined;\n        this.loadingBook = false;\n      })\n    }catch (error){\n      runInAction(() => this.loadingBook = false);\n      toast.error(\"Error occurred fetching books\");\n      throw error;\n    }\n  }\n\n  // borrow a book\n  @action borrowBook = async (bookId: string) => {\n    this.loadingBookAction = true;\n    try{\n      await BookRequest.borrowBook(bookId);\n      runInAction(() => {\n        if(this.books !== null){\n          const bookBeingBorrowed = this.books.find(x => x._id === bookId);\n          if(bookBeingBorrowed){\n            bookBeingBorrowed.isBorrowed = true;\n            bookBeingBorrowed.copies = bookBeingBorrowed.copies - 1;\n          }\n        }\n        if(this.book !== null){\n          this.book.isBorrowed = true;\n          this.book.copies = this.book.copies - 1;\n          this.user!.borrowedBooks.push(this.book._id);\n        }\n        this.loadingBookAction = false;\n        toast.success(\"Book borrowed successful\");\n      })\n    }catch (error) {\n      runInAction(() => this.loadingBookAction = false);\n      toast.error(\"Error occurred borrowing book\");\n      throw error;\n    }\n  }\n\n  // return a book\n  @action returnBook = async (bookId: string) => {\n    this.loadingBookAction = true;\n    try{\n      await BookRequest.returnBook(bookId);\n      runInAction(() => {\n        if(this.books !== null){\n          const bookBeingReturned = this.books.find(x => x._id === bookId);\n          if(bookBeingReturned){\n            bookBeingReturned.isBorrowed = false;\n            bookBeingReturned.copies = bookBeingReturned.copies + 1;\n          }\n        }\n        if(this.book !== null){\n          this.book.isBorrowed = false;\n          this.book.copies = this.book.copies + 1;\n        }\n\n        if(this.borrowedBooks !== null){\n          this.borrowedBooks = this.borrowedBooks.filter(x => x._id !== bookId);\n        }\n\n        this.user!.borrowedBooks = this.user!.borrowedBooks.filter(x => x !== bookId);\n        this.loadingBookAction = false;\n        toast.success(\"Book returned successfully\")\n      })\n    }catch (error) {\n      runInAction(() => this.loadingBookAction = false);\n      toast.error(\"Error occurred returning book\");\n      throw error;\n    }\n  }\n\n  // get users borrowed books\n  @action getBorrowedBooks = async () => {\n    this.loadingBooks = true;\n    try{\n      const bookData = await AuthRequest.getBorrowedBooks();\n      runInAction(() => {\n        this.borrowedBooks = bookData.data;\n        this.loadingBooks = false;\n      })\n    }catch (e) {\n      runInAction(() => this.loadingBooks = false);\n      toast.error(\"Error occurred get your books\");\n      throw e;\n    }\n  }\n\n  // logout user\n  @action logout = async () => {\n    this.user = null;\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\");\n  }\n}\n\nconst storeContext = createContext(new AppStore());\n\nexport default storeContext;\n","import React, {useContext} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, Center, FormControl, FormLabel, Input, FormErrorMessage, Button} from \"@chakra-ui/react\";\nimport {Formik} from \"formik\";\nimport * as yup from \"yup\";\nimport {Link} from \"react-router-dom\";\nimport storeContext from \"../../application/store/store\";\nimport {IAuthFormValues} from \"../../infrastructure/models/auth\";\nimport {history} from \"../../index\";\n\nconst LoginForm = () => {\n  const validationSchema = yup.object().shape({\n    email: yup.string().required(\"Email is required\").email(\"Please put in a valid email address\"),\n    password: yup.string().required(\"Password is required\")\n  })\n\n  const {loginUser} = useContext(storeContext);\n\n  return (\n    <div className=\"auth__box\">\n        <Box className=\"middle\">\n          <Center mb={5}>\n        <h1 className=\"logo__text\">Heimdall Library</h1>\n          </Center>\n          <Box className=\"auth__form__box\" bg=\"#fff\">\n            <Formik validationSchema={validationSchema} initialValues={{email: \"\", password: \"\"}} onSubmit={(values: IAuthFormValues, action) => loginUser(values).then(() => history.push(\"/\")).catch(() => action.setSubmitting(false))}>\n              {({\n                handleSubmit,\n                values,\n                handleChange,\n                handleBlur,\n                isSubmitting,\n                isValid,\n                dirty,\n                touched,\n                errors\n                }) => (\n                <form onSubmit={handleSubmit}>\n                  <header>\n                  <Center>\n                    <h1 className=\"auth__header\">Login to your account</h1>\n                  </Center>\n                  <Center>\n                    <p className=\"auth__desc\">Securley login to your heimdall account</p>\n                  </Center>\n                  </header>\n\n                  <Box mt={5}>\n                  <FormControl isInvalid={!!errors.email && touched.email} id=\"email\">\n                    <FormLabel className=\"auth__label\">Email address</FormLabel>\n                    <Input value={values.email} name=\"email\" onBlur={handleBlur} onChange={handleChange} className=\"auth__input\" type=\"email\" />\n                    {errors.email && touched.email && <FormErrorMessage>\n                      {errors.email}\n                    </FormErrorMessage>}\n                  </FormControl>\n\n                    <FormControl isInvalid={!!errors.password && touched.password} mt={5} id=\"password\">\n                      <FormLabel className=\"auth__label\">Password</FormLabel>\n                      <Input value={values.password} name=\"password\" onBlur={handleBlur} onChange={handleChange} className=\"auth__input\" type=\"password\" />\n                      {errors.password && touched.password && <FormErrorMessage>\n                        {errors.password}\n                      </FormErrorMessage>}\n                    </FormControl>\n                  </Box>\n\n                  <Button disabled={isSubmitting || !isValid || !dirty} type=\"submit\" isLoading={isSubmitting} mt={10} className=\"auth__btn\">\n                      Log In\n                  </Button>\n                </form>\n              )}\n            </Formik>\n          </Box>\n          <Center mt={5}>\n            <p style={{color: \"#fff\", fontSize: \".75em\"}}>Dont have an account yet? <Link to=\"/signup\">Sign up</Link></p>\n          </Center>\n        </Box>\n    </div>\n  )\n}\n\nexport default observer(LoginForm);\n","const chakraTheme = {\n  fonts:{\n    body: \"Karla, sans-serif\"\n  },\n  styles:{\n    global: {\n      body: \"#fff\"\n    }\n  }\n}\n\nexport default chakraTheme;\n","import React from \"react\";\nimport {Center, Container, Spinner, Box} from \"@chakra-ui/react\";\n\nconst Loader = () => {\n  return (\n    <Box>\n      <Container maxW=\"container.lg\">\n        <Center mt=\"2em\">\n      <Spinner\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n        color=\"blue.500\"\n        size=\"xl\"\n      />\n        </Center>\n      </Container>\n    </Box>\n  )\n}\n\nexport default Loader;\n","import React, {useContext} from \"react\";\nimport storeContext from \"../../application/store/store\";\nimport {observer} from \"mobx-react-lite\";\nimport {\n  Box,\n  HStack,\n  Spacer,\n  Container,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Image,\n  useMediaQuery\n} from \"@chakra-ui/react\";\nimport {NavLink, Link} from \"react-router-dom\";\nimport {history} from \"../../index\";\nimport {ChevronDownIcon} from \"@chakra-ui/icons\";\nimport LoaderInline from \"../../application/layout/Spinner\";\n\nconst Navbar = () => {\n  const {user, logout} = useContext(storeContext);\n  const [isMobile] = useMediaQuery(\"(max-width: 500px)\")\n  if(!user) return <LoaderInline />;\n  return (\n    <header className=\"nav\">\n      <Container maxW=\"container.lg\" height=\"50px\">\n    <nav className=\"navbar\">\n           <HStack>\n             <Box>\n               <NavLink to=\"/\" className=\"auth__header\">Hemidall Library</NavLink>\n             </Box>\n             <Spacer />\n             <HStack spacing=\"30px\">\n               {!isMobile && <NavLink activeClassName=\"active__nav\" to=\"/borrowed\">My borrowed books</NavLink>}\n              <Box>\n                <Menu size=\"large\" isLazy={true} >\n                  <MenuButton as={Box} >\n                    <HStack spacing=\"5px\">\n                      <Image src={user!.avatar} alt=\"user_avatar\" borderRadius=\"full\" boxSize=\"40px\" />\n                      <ChevronDownIcon boxSize={8} />\n                    </HStack>\n                  </MenuButton>\n                  <MenuList style={{zIndex: 200}}  minWidth=\"180px\" className=\"nav__auth__box\">\n                    <MenuItem onClick={() => history.push(\"/borrowed\")}>My borrowed books</MenuItem>\n                    <MenuItem onClick={() => logout()}>Logout</MenuItem>\n                  </MenuList>\n                </Menu>\n              </Box>\n             </HStack>\n           </HStack>\n    </nav>\n      </Container>\n    </header>\n  )\n}\n\nexport default observer(Navbar);\n","import React from \"react\";\nimport {Box, FormControl, FormErrorMessage, Input, Stack, Select, Button} from \"@chakra-ui/react\";\nimport {Formik} from \"formik\";\nimport {StringParam, useQueryParam} from \"use-query-params\";\n\nconst Search = () => {\n  const [title, setTitle] = useQueryParam(\"title\", StringParam);\n  return (\n    <Box>\n      <Formik initialValues={{title: title ? title : \"\"}} onSubmit={values => setTitle(values.title)}>\n        {({\n          handleSubmit,\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange\n          }) => (\n          <form onSubmit={handleSubmit}>\n          <Stack spacing=\"20px\" direction={[\"column\", \"row\"]} alignItems=\"center\">\n            <FormControl style={{maxWidth: \"350px\"}} isInvalid={!!errors.title && touched.title} id=\"password\">\n              <Input value={values.title} name=\"title\" onBlur={handleBlur} onChange={handleChange} className=\"search__input\" placeholder=\"What are you looking for\" />\n              {errors.title && touched.title && <FormErrorMessage>\n                {errors.title}\n              </FormErrorMessage>}\n            </FormControl>\n              <Button type=\"submit\" className=\"search__btn\">Search</Button>\n          </Stack>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default Search;\n","import React from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, Badge, Image, HStack, useMediaQuery} from \"@chakra-ui/react\";\nimport {StarIcon, CheckIcon, NotAllowedIcon} from \"@chakra-ui/icons\";\nimport {IBook} from \"../../infrastructure/models/book\";\nimport {Link} from \"react-router-dom\";\nimport {BsBook, BsLink45Deg} from \"react-icons/bs\";\nimport {StringParam, useQueryParam} from \"use-query-params\";\n\ninterface IProps{\n  book: IBook;\n}\n\nconst BookItem = ({book}: IProps) => {\n  const [isMobile] = useMediaQuery(\"(max-width: 500px)\");\n  const iterator = [...Array(Math.floor(book.rating))];\n  const [bookPane, setBook] = useQueryParam(\"bookPane\", StringParam);\n\n  return (\n    <Box onClick={() => setBook(book._id)} className=\"book__item__box\">\n      <Badge colorScheme=\"purple\">New</Badge>\n      <HStack spacing=\"10px\" alignItems=\"flex-start\">\n        <Image src={book.images[0]} alt=\"book-photo\" className=\"book__item__img\" />\n        <Box>\n          <Link to={`/book/${book._id}`} className=\"book__item__link\">{book.title}</Link>\n          <HStack>\n          <HStack spacing=\"4px\">\n            {iterator.map((value: undefined, index: number) => (\n              <StarIcon boxSize={2} key={index} color=\"#237EA3\" />\n            ))}\n          </HStack>\n            <p style={{color: \"#237EA3\"}}>{book.rating}</p>\n          </HStack>\n\n          <p>By: <span style={{color: \"#237EA3\", fontWeight: \"bold\"}}>{book.author}</span></p>\n        </Box>\n      </HStack>\n      <HStack spacing=\"20px\" mt={3} mb={3}>\n        {book.copies > 1 ? (\n          <small><CheckIcon boxSize={3} color=\"#237EA3\"/> Available</small>\n        ) : (\n          <small><NotAllowedIcon boxSize={3} color=\"#237EA3\" /> Un-available</small>\n        )\n        }\n        <HStack><BsBook size=\"12px\" color=\"#237EA3\" /><small>{book.pages} pages</small></HStack>\n        <HStack><BsLink45Deg size=\"12px\" color=\"#237EA3\" /><small>{book.genre} genre</small></HStack>\n      </HStack>\n      <Box>\n        <p className=\"truncate\">{book.description}</p>\n      </Box>\n      <Box mt={4}>\n        <small style={{fontWeight: \"bold\"}}>Published {book.publishedDate}</small>\n      </Box>\n    </Box>\n  )\n}\n\nexport default observer(BookItem);\n","import React from \"react\";\nimport {Center, Spinner} from \"@chakra-ui/react\";\n\nconst LoaderInline = () => {\n  return (\n    <Center pt={10}>\n      <Spinner\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n        color=\"blue.500\"\n        size=\"xl\"\n      />\n    </Center>\n  )\n}\n\nexport default LoaderInline;\n","import React, {useContext, useEffect} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, HStack, Image, Button, Badge, Spacer, Divider, Container} from \"@chakra-ui/react\";\nimport {StringParam, useQueryParam} from \"use-query-params\";\nimport storeContext from \"../../application/store/store\";\nimport LoaderInline from \"../../application/layout/LoaderInline\";\nimport {Link,  useLocation, useParams} from \"react-router-dom\";\nimport {StarIcon, CopyIcon, CheckIcon, NotAllowedIcon} from \"@chakra-ui/icons\";\nimport {BsBook, BsLink45Deg} from \"react-icons/bs\";\n\nconst BookPage = () => {\n  const [bookPane, setBook] = useQueryParam(\"bookPane\", StringParam);\n  let bookId = \"\";\n  const params = useParams<{id: string}>();\n  const location = useLocation();\n  if(location.pathname.startsWith(\"/book\")){\n    bookId = params.id;\n  } else {\n    bookId = bookPane!;\n  }\n  const {loadingBook, book, getBookById, user, loadingBookAction, borrowBook, returnBook} = useContext(storeContext);\n  useEffect(() => {\n    getBookById(bookId);\n  }, [getBookById, bookId])\n  if(book === null || loadingBook) return <LoaderInline />\n  const iterator = [...Array(Math.floor(book.rating))];\n  return (\n    <Box className={location.pathname.startsWith(\"/book\") ? \"\" : \"book__item__box maxed\"} p=\"0\">\n      <Container maxW={location.pathname.startsWith(\"/book\") ? \"container.lg\" : \"\"} >\n      <Box p=\"1.25em\" pb=\"0\">\n        <Box mb={4}>\n        {location.pathname.startsWith(\"/book\") && <Link to=\"/\" style={{color: \"#237EA3\"}}>&#8592; back</Link>}\n        </Box>\n      <HStack spacing=\"10px\" alignItems=\"flex-start\" >\n        <Image src={book.images[0]} alt=\"book-photo\" className=\"book__item__img\" />\n        <Box>\n          <Link to={`/book/${book._id}`} className=\"book__item__link\">{book.title}</Link>\n          <HStack>\n            <HStack spacing=\"4px\">\n              {iterator.map((value: undefined, index: number) => (\n                <StarIcon boxSize={2} key={index} color=\"#237EA3\" />\n              ))}\n            </HStack>\n            <p style={{color: \"#237EA3\"}}>{book.rating}</p>\n          </HStack>\n\n          <p>By: <span style={{color: \"#237EA3\", fontWeight: \"bold\"}}>{book.author}</span></p>\n          {book.isBorrowed ? <Badge colorScheme=\"green\">Borrowed</Badge> : book.copies <= 1 ? <Badge colorScheme=\"red\">Un available</Badge> : \"\"}\n        </Box>\n      </HStack>\n      <Box mt={5}>\n        <HStack spacing=\"20px\" mt={3} mb={3}>\n          {book.copies > 1 ? (\n            <small><CheckIcon boxSize={3} color=\"#237EA3\"/> Available</small>\n          ) : (\n            <small><NotAllowedIcon boxSize={3} color=\"#237EA3\" /> Un-available</small>\n          )\n          }\n          <HStack><CopyIcon color=\"#237EA3\" boxSize=\"15px\" /> <small>{book.copies} copies left</small></HStack>\n          <HStack><BsBook size=\"12px\" color=\"#237EA3\" /><small>{book.pages} pages</small></HStack>\n          <HStack><BsLink45Deg size=\"12px\" color=\"#237EA3\" /><small>{book.genre} genre</small></HStack>\n        </HStack>\n      </Box>\n\n      <HStack mt={5}>\n        {book.isBorrowed ? <Button disabled={loadingBookAction} onClick={() => returnBook(book._id)} isLoading={loadingBookAction} className=\"borrow__btn\">Return copy</Button> : <Button isLoading={loadingBookAction} onClick={() => borrowBook(book._id)} disabled={book.isBorrowed || user!.borrowedBooks.length >= 2 || book.copies <= 1 || loadingBookAction} className=\"borrow__btn\">\n          Borrow a copy\n        </Button>}\n        <Spacer />\n        <a href={book.productLink} target=\"_blank\" rel=\"noreferrer noopener\" className=\"product__link\">Buy book here</a>\n      </HStack>\n      </Box>\n      <Divider mt={3} mb={3} />\n      <Box className=\"book__info\" p=\"1.25em\" pt=\"0\">\n        <h3 style={{fontWeight: 700, fontSize: \"1.1em\"}}>Book summary</h3>\n        <Box>\n          <p>{book.description}</p>\n        </Box>\n        <Box mt={6}>\n          <small style={{fontWeight: \"bold\"}}>Published {book.publishedDate}</small>\n        </Box>\n      </Box>\n      </Container>\n    </Box>\n  )\n}\n\nexport default observer(BookPage);\n","import React, {useContext, useEffect} from \"react\";\nimport {Box, Container, SimpleGrid, useMediaQuery} from \"@chakra-ui/react\";\nimport {observer} from \"mobx-react-lite\";\nimport Search from \"./Search\";\nimport storeContext from \"../../application/store/store\";\nimport Loader from \"../../application/layout/Spinner\";\nimport BookItem from \"../book/BookItem\";\nimport {useQueryParam, StringParam} from \"use-query-params\";\nimport BookPage from \"../book/BookPage\";\n\nconst HomePage = () => {\n  const {loadingBooks, books, getAllBooks, book} = useContext(storeContext);\n  const [bookPane, setBook] = useQueryParam(\"bookPane\", StringParam);\n  const [title, setTitle] = useQueryParam(\"title\", StringParam);\n  const [isMobile] = useMediaQuery(\"(max-width: 500px)\")\n\n  useEffect(() => {\n    getAllBooks(title ? title : \"\");\n  }, [getAllBooks, title])\n\n  if(loadingBooks || books == null) return <Loader />;\n  return (\n    <Box>\n      <Container maxW=\"container.lg\">\n        <Box mt={5} mb={5}>\n          <Search />\n        </Box>\n        <Box>\n          <SimpleGrid spacing=\"1em\" templateColumns={{xl: \"0.8fr 1fr\", lg: \"0.8fr 1fr\", sm: \"1fr\"}}>\n            <Box>\n              <Box>\n                {title && (\n                  <Box mb={4}>\n                    <h3 className=\"auth__header\">Search results for \"{title}\"</h3>\n                  </Box>\n                )}\n                <small style={{fontWeight: \"bold\"}}>{books.length} book(s) found</small>\n              </Box>\n              {books.length > 0 ? books.map((book) => (\n                <Box mb={5} key={book._id}>\n                  <BookItem book={book} />\n                </Box>\n              )) : (\n                <h2 className=\"auth__header\">There are no books currently available in the library</h2>\n              )}\n            </Box>\n\n            <Box>\n              { !isMobile && bookPane && (\n                <BookPage />\n              )}\n            </Box>\n          </SimpleGrid>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nexport default observer(HomePage);\n","import React, {useContext, useEffect} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, Container, HStack, Image, SimpleGrid, Badge} from \"@chakra-ui/react\";\nimport storeContext from \"../../application/store/store\";\nimport Loader from \"../../application/layout/Spinner\";\nimport BookItem from \"../book/BookItem\";\nimport BookPage from \"../book/BookPage\";\nimport {StringParam, useQueryParam} from \"use-query-params\";\n\nconst BorrowedBooks = () => {\n  const {user, loadingBooks, getBorrowedBooks, borrowedBooks} = useContext(storeContext);\n  const [bookPane, setBook] = useQueryParam(\"bookPane\", StringParam);\n\n  useEffect(() => {\n    getBorrowedBooks()\n  }, [getBorrowedBooks])\n\n  if(loadingBooks || borrowedBooks == null) return <Loader />\n\n  return (\n    <Box mt={5}>\n      <Container maxW=\"container.lg\">\n      <HStack>\n        <Image src={user?.avatar} alt=\"avatar\" width=\"100px\" height=\"100px\" />\n        <Box>\n        <h2>{user?.email}</h2>\n          <p style={{fontWeight: \"bold\"}} className=\"auth__label\">You have currently borrowed {user?.borrowedBooks.length} book(s)</p>\n\n        </Box>\n      </HStack>\n        <Box mt={5} mb={5}>\n          <Box>\n        <h3 style={{fontSize: \"1.2em\"}}>Borrowed Books</h3>\n          {user!.borrowedBooks.length >= 2 && <Badge colorScheme=\"red\">Max allowed books</Badge>}\n        </Box>\n          <Box mt={5}>\n            <SimpleGrid spacing=\"1em\" templateColumns={{xl: \"0.8fr 1fr\", lg: \"0.8fr 1fr\", sm: \"1fr\"}}>\n              <Box>\n                <Box>\n                  <small style={{fontWeight: \"bold\"}}>{borrowedBooks.length} books borrowed</small>\n\n                </Box>\n                {borrowedBooks.map((book) => (\n                  <Box mb={5} key={book._id}>\n                    <BookItem book={book} />\n                  </Box>\n                ))}\n              </Box>\n\n              <Box>\n                { bookPane && (\n                  <BookPage />\n                )}\n              </Box>\n            </SimpleGrid>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nexport default observer(BorrowedBooks);\n","import React, {useContext} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport {Box, Center, FormControl, FormLabel, Input, FormErrorMessage, Button} from \"@chakra-ui/react\";\nimport {Formik} from \"formik\";\nimport * as yup from \"yup\";\nimport {Link} from \"react-router-dom\";\nimport storeContext from \"../../application/store/store\";\nimport {IAuthFormValues} from \"../../infrastructure/models/auth\";\nimport {history} from \"../../index\";\n\nconst SignUpForm= () => {\n  const validationSchema = yup.object().shape({\n    email: yup.string().required(\"Email is required\").email(\"Please put in a valid email address\"),\n    password: yup.string().required(\"Password is required\")\n  })\n\n  const {signUp} = useContext(storeContext);\n\n  return (\n    <div className=\"auth__box\">\n      <Box className=\"middle\">\n        <Center mb={5}>\n          <h1 className=\"logo__text\">Heimdall Library</h1>\n        </Center>\n        <Box className=\"auth__form__box\" bg=\"#fff\">\n          <Formik validationSchema={validationSchema} initialValues={{email: \"\", password: \"\"}} onSubmit={(values: IAuthFormValues, action) => signUp(values).then(() => history.push(\"/login\")).catch(() => action.setSubmitting(false))}>\n            {({\n                handleSubmit,\n                values,\n                handleChange,\n                handleBlur,\n                isSubmitting,\n                isValid,\n                dirty,\n                touched,\n                errors\n              }) => (\n              <form onSubmit={handleSubmit}>\n                <header>\n                  <Center>\n                    <h1 className=\"auth__header\">Register at heimdall</h1>\n                  </Center>\n                  <Center>\n                    <p className=\"auth__desc\">Securley signup at hemidall and start borrowing books!</p>\n                  </Center>\n                </header>\n\n                <Box mt={5}>\n                  <FormControl isInvalid={!!errors.email && touched.email} id=\"email\">\n                    <FormLabel className=\"auth__label\">Email address</FormLabel>\n                    <Input value={values.email} name=\"email\" onBlur={handleBlur} onChange={handleChange} className=\"auth__input\" type=\"email\" />\n                    {errors.email && touched.email && <FormErrorMessage>\n                      {errors.email}\n                    </FormErrorMessage>}\n                  </FormControl>\n\n                  <FormControl isInvalid={!!errors.password && touched.password} mt={5} id=\"password\">\n                    <FormLabel className=\"auth__label\">Password</FormLabel>\n                    <Input value={values.password} name=\"password\" onBlur={handleBlur} onChange={handleChange} className=\"auth__input\" type=\"password\" />\n                    {errors.password && touched.password && <FormErrorMessage>\n                      {errors.password}\n                    </FormErrorMessage>}\n                  </FormControl>\n                </Box>\n\n                <Button disabled={isSubmitting || !isValid || !dirty} type=\"submit\" isLoading={isSubmitting} mt={10} className=\"auth__btn\">\n                  Sign up\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </Box>\n        <Center mt={5}>\n          <p style={{color: \"#fff\", fontSize: \".75em\"}}>Dont have an account yet? <Link to=\"/login\">Login</Link></p>\n        </Center>\n      </Box>\n    </div>\n  )\n}\n\nexport default observer(SignUpForm);\n","import React from \"react\";\nimport {Container} from \"@chakra-ui/react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container maxW=\"container.lg\" centerContent>\n      <p>Copyright &copy; hiemdall {new Date().getFullYear()}</p>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React from \"react\";\nimport  {Box, Center, HStack} from \"@chakra-ui/react\";\nimport {Link} from \"react-router-dom\";\nimport { AiOutlineFrown } from \"react-icons/ai\";\n\nconst NotFound = () => {\n  return (\n      <Center h=\"calc(100vh - 100px)\">\n        <Box>\n          <HStack>\n            <AiOutlineFrown />\n            <p>Sorry we couldnt find what you're looking for</p>\n          </HStack>\n          <Center>\n            <Link to=\"/\" style={{color: \"#237EA3\"}}>Go home &#8594;</Link>\n          </Center>\n        </Box>\n      </Center>\n  )\n}\n\nexport default NotFound;\n","import React, {useContext, useEffect} from 'react';\nimport {Switch, Route, useLocation, withRouter} from \"react-router-dom\";\nimport PrivateRoute from \"../../infrastructure/utils/PrivateRoute\";\nimport LoginForm from \"../../features/auth/LoginForm\";\nimport {extendTheme, ChakraProvider } from \"@chakra-ui/react\";\nimport chakraTheme from \"../../infrastructure/utils/chakraTheme\";\nimport Navbar from \"../../features/nav/Navbar\";\nimport HomePage from \"../../features/home/HomePage\";\nimport storeContext from \"../store/store\";\nimport Loader from \"./Spinner\";\nimport {observer} from \"mobx-react-lite\";\nimport BorrowedBooks from \"../../features/auth/BorrowedBooks\";\nimport BookPage from \"../../features/book/BookPage\";\nimport SignUpForm from \"../../features/auth/SignUpForm\";\nimport Footer from \"../../features/home/Footer\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport NotFound from \"./NotFound\";\n\nconst theme = extendTheme(chakraTheme);\n\nfunction App() {\n  const {loadApp, getCurrentUser, token, appLoaded} = useContext(storeContext);\n  useEffect(() => {\n    if(token){\n      getCurrentUser().then(() => loadApp());\n    }\n    loadApp();\n  }, [token, getCurrentUser, loadApp]);\n\n  const {pathname} = useLocation();\n\n  if(!appLoaded) return <Loader />;\n\n  return (\n    <ChakraProvider theme={theme}>\n      <ToastContainer position={'bottom-right'} />\n    <div className=\"app\">\n      <div className=\"content\">\n      {pathname !== \"/signup\" && pathname !== \"/login\" && <Navbar />}\n      <Switch>\n        <Route exact path=\"/login\" component={LoginForm} />\n        <PrivateRoute  exact path=\"/\" component={HomePage} />\n        <PrivateRoute exact path=\"/book/:id\" component={BookPage} />\n        <PrivateRoute exact path=\"/borrowed\" component={BorrowedBooks} />\n        <Route exact path=\"/signup\" component={SignUpForm}/>\n        <Route exact component={NotFound} />\n      </Switch>\n      </div>\n      {pathname !== \"/signup\" && pathname !== \"/login\" && <Footer />}\n    </div>\n    </ChakraProvider>\n  );\n}\n\nexport default withRouter(observer(App));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './application/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.css\";\nimport {Router, Route} from \"react-router-dom\";\nimport {createBrowserHistory} from \"history\";\nimport {QueryParamProvider} from \"use-query-params\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <QueryParamProvider ReactRouterRoute={Route}>\n    <App />\n      </QueryParamProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}